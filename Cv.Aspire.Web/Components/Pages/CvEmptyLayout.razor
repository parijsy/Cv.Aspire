@page "/CvEmptyLayout"
@layout Cv.Aspire.Web.Components.Layout.EmptyLayout
<PageTitle>CV</PageTitle>

<div class="container">
    <div class="row">
        <div class="col">
            <p class="display-4">Yuri Parijs, MSc</p>
            <h2 class="h2">Software Developer</h2>

            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-geo-fill" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M4 4a4 4 0 1 1 4.5 3.969V13.5a.5.5 0 0 1-1 0V7.97A4 4 0 0 1 4 3.999zm2.493 8.574a.5.5 0 0 1-.411.575c-.712.118-1.28.295-1.655.493a1.3 1.3 0 0 0-.37.265.3.3 0 0 0-.057.09V14l.002.008.016.033a.6.6 0 0 0 .145.15c.165.13.435.27.813.395.751.25 1.82.414 3.024.414s2.273-.163 3.024-.414c.378-.126.648-.265.813-.395a.6.6 0 0 0 .146-.15l.015-.033L12 14v-.004a.3.3 0 0 0-.057-.09 1.3 1.3 0 0 0-.37-.264c-.376-.198-.943-.375-1.655-.493a.5.5 0 1 1 .164-.986c.77.127 1.452.328 1.957.594C12.5 13 13 13.4 13 14c0 .426-.26.752-.544.977-.29.228-.68.413-1.116.558-.878.293-2.059.465-3.34.465s-2.462-.172-3.34-.465c-.436-.145-.826-.33-1.116-.558C3.26 14.752 3 14.426 3 14c0-.599.5-1 .961-1.243.505-.266 1.187-.467 1.957-.594a.5.5 0 0 1 .575.411" />
            </svg>
            <a href="https://www.google.nl/maps/place/Vlijmen" target="_blank">Vlijmen</a><br />

            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-envelope-at-fill" viewBox="0 0 16 16">
                <path d="M2 2A2 2 0 0 0 .05 3.555L8 8.414l7.95-4.859A2 2 0 0 0 14 2zm-2 9.8V4.698l5.803 3.546zm6.761-2.97-6.57 4.026A2 2 0 0 0 2 14h6.256A4.5 4.5 0 0 1 8 12.5a4.49 4.49 0 0 1 1.606-3.446l-.367-.225L8 9.586zM16 9.671V4.697l-5.803 3.546.338.208A4.5 4.5 0 0 1 12.5 8c1.414 0 2.675.652 3.5 1.671" />
                <path d="M15.834 12.244c0 1.168-.577 2.025-1.587 2.025-.503 0-1.002-.228-1.12-.648h-.043c-.118.416-.543.643-1.015.643-.77 0-1.259-.542-1.259-1.434v-.529c0-.844.481-1.4 1.26-1.4.585 0 .87.333.953.63h.03v-.568h.905v2.19c0 .272.18.42.411.42.315 0 .639-.415.639-1.39v-.118c0-1.277-.95-2.326-2.484-2.326h-.04c-1.582 0-2.64 1.067-2.64 2.724v.157c0 1.867 1.237 2.654 2.57 2.654h.045c.507 0 .935-.07 1.18-.18v.731c-.219.1-.643.175-1.237.175h-.044C10.438 16 9 14.82 9 12.646v-.214C9 10.36 10.421 9 12.485 9h.035c2.12 0 3.314 1.43 3.314 3.034zm-4.04.21v.227c0 .586.227.8.581.8.31 0 .564-.17.564-.743v-.367c0-.516-.275-.708-.572-.708-.346 0-.573.245-.573.791" />
            </svg>
            <a href="mailto:yuriparijs@hotmail.com">yuriparijs@hotmail.com</a><br />

            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-linkedin" viewBox="0 0 16 16">
                <path d="M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854zm4.943 12.248V6.169H2.542v7.225zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248S2.4 3.226 2.4 3.934c0 .694.521 1.248 1.327 1.248zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016l.016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225z" />
            </svg>
            <a href="https://www.linkedin.com/in/yuri-parijs-1196b283" target="_blank">www.linkedin.com/in/yuri-parijs-1196b283</a>

        </div>
        <div class="col">
            <figure class="figure" style="float:right;">
                <img src="cv/yuri.jpeg" class="rounded" width="300" />
            </figure>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <h2>Ervaring</h2>
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">Software Developer</h5>
                    <h6 class="card-subtitle mb-2 text-body-secondary">Jul 2016 - Present</h6>
                    <p class="card-text">Van Spaendonck Development</p>
                </div>
            </div>
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">C# Developer</h5>
                    <h6 class="card-subtitle mb-2 text-body-secondary">Jun 2012 - Jun 2016</h6>
                    <p class="card-text">Dazzleware BV</p>
                </div>
            </div>
        </div>
        <div class="col">
            <h2>Opleidingen</h2>
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">Utrecht University</h5>
                    <h6 class="card-subtitle mb-2 text-body-secondary">2009 - 2012</h6>
                    <p class="card-text">Master of Science (MS), Game and media technology</p>
                </div>
            </div>
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">Avans University of Applied Sciences</h5>
                    <h6 class="card-subtitle mb-2 text-body-secondary">2005 - 2009</h6>
                    <p class="card-text">Bachelor's degree, Multimedia</p>
                </div>
            </div>
        </div>
        <div class="col">
            <h2>Certificeringen</h2>
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">Microsoft Certified</h5>
                    <p class="card-text">
                        <ul>
                            <li>Azure Fundamentals</li>
                            <li>Azure Developer Associate</li>
                            <li>Azure AI Fundamentals</li>
                        </ul>
                    </p>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <h2>Skills</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-3">
            <ul>
                @RenderSkill(("C#"))
                @RenderSkill(("C++"))
                @RenderSkill(("Computer Vision"))
                @RenderSkill(("Algorithms"))
                @RenderSkill(("Artificial Intelligence (AI)"))
                @RenderSkill(("Machine Learning"))
                @RenderSkill(("Prompt Engineering"))
                @RenderSkill(("Large Language Models (LLM)"))
            </ul>
        </div>
        <div class="col-3">
            <ul>
                @RenderSkill(("Semantic Kernel"))
                @RenderSkill(("Java"))
                @RenderSkill(("JavaScript"))
                @RenderSkill(("SQL"))
                @RenderSkill(("Transact-SQL (T-SQL)"))
                @RenderSkill(("HTML"))
                @RenderSkill(("CSS"))
                @RenderSkill(("XML"))
            </ul>
        </div>
        <div class="col-3">
            <ul>
                @RenderSkill(("jQuery"))
                @RenderSkill(("Web Applications"))
                @RenderSkill(("API Development"))
                @RenderSkill(("Web Development"))
                @RenderSkill(("Back-End Web Development"))
                @RenderSkill(("Front-End Development"))
                @RenderSkill(("SignalR"))
                @RenderSkill(("Microsoft Azure"))
            </ul>
        </div>
        <div class="col-3">
            <ul>
                @RenderSkill(("Azure Devops"))
                @RenderSkill(("Blazor"))
                @RenderSkill((".NET"))
                @RenderSkill(("Visual Studio"))
                @RenderSkill(("Git"))
                @RenderSkill(("Jira"))
                @RenderSkill(("en meer..."))
            </ul>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <h2>Over</h2>
            <p>
                Door de combinatie van een HBO informatica opleiding en daarna een Universitaire computerwetenschappen opleiding heb ik een interessante combinatie van praktijk en theorie kennis opgebouwd. 
                Deze kennis is de afgelopen 12 jaar gegroeid vanuit de rol als C# software-ontwikkelaar bij twee bedrijven.
            </p>
            <p>
                Bij Dazzleware heb ik mijn eerste echte introductie met C# gekregen.
                Door samen met andere ontwikkelaars aan meerdere projecten te werken heb ik mij daar kunnen ontwikkelen in mijn C# kennis, maar ook in javascript, css, en HTML.
                Naast code schrijven heb ik bij Dazzleware ook, in mindere mate, contact gehad met klanten voor het uitwerken van nieuwe functionaliteiten.
            </p>
            <p>
                Met 4 jaar ervaring als C# software-ontwikkelaar ben ik aan de slag gegaan bij Van Spaendonck.
                Hier heb ik in het begin vooral gewerkt als full-stack ontwikkelaar.
                Bij de overstap naar een applicatie met een API heb ik de overstap gemaakt om te focussen op alleen back-end werk.
            </p>
            <p>
                Mijn ideale werkomgeving is een omgeving waarin ik als ontwikkelaar wordt uitgedaagd en mij kan verdiepen in nieuwe technieken.
                Ik ben altijd op zoek naar best-practices en kan plezier halen uit het maken van code die uiteraard doet wat het moet doen, maar daarnaast ook duidelijk te begrijpen is, compact, netjes, en goed onderhoudbaar is.
                Als ontwikkelaar werk je vaak niet alleen aan een project, ik vind het daarom belangrijk dat code snel te doorgronden moet zijn voor collega's.
                Om deze reden spar ik graag over ideeën. 
                Nieuwe features kunnen op meerdere manieren uitgewerkt worden, elke uitwerking met zijn eigen voor- en nadelen. 
                In dat soort momenten betrek ik graag een collega om de opties te bespreken om zodoende tot de beste keuze te komen, tijdens die momenten sta ik altijd open voor opties die zij aandragen.
                Wanneer ik in contact kom met nieuwe technieken dan bedenk ik graag hoe deze techniek toegepast kan worden in een huidige code-base, maar ook hoe het gecombineerd kan worden met iets anders.
                Momenteel vind ik het daarom ook leuk om mij te verdiepen in de AI functionaliteiten van Azure.
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <h2>Projecten</h2>
            <h3>van Spaendonck</h3>
            <p>
                De basis opzetten van de nieuwe versie van Loket.nl, denk hierbij aan het ontwerpen van de eerste services die worden aangeroepen door de destijds nieuwe API laag. Naast de inhoudelijke structuur van deze services, die als voorbeeld dienen voor alle latere services die zijn gemaakt, is er destijds ook aandacht besteed aan het eenvoudig aanroepen van deze services en hoe de services middels unit tests getest kunnen worden. Bij de communicatie tussen de API en de services is ervoor gekozen om deze strongly-typed en loosely-coupled te maken, dit hebben we weten te bereiken door o.a. de publieke modellen van een service beschikbaar te maken via een NuGet package. Het voordeel hiervan is dat je de modellen eenmalig definieert en je via de NuGet package manager inziet of je modellen achterlopen.
                Een ander belangrijk onderdeel waar aandacht aan was besteed was schaalbaarheid, de oude monoliete applicatie was in enkele gevallen stateful. Het was een bewuste keuze om de services stateless te maken met het oog op de toekomst waar we uiteindelijk onze services in Azure wilden gaan hosten en de mogelijkheid hebben om gebruik te maken van scaling.
                Ondertussen zijn deze services al ver doorontwikkeld en is het de basis van nieuwe services, en onze nieuwere microservices zijn geïnspireerd op deze services. Ook wordt alles gehost in Azure en wordt (bijna) alles via containers gedeployed.
            </p>
            <p>
                De API van loket ondersteund bij de meeste endpoints die lijsten teruggeeft de mogelijkheid om te filteren en te sorteren. Voor de filter was er gekozen om de operators te ondersteunen die Microsoft adviseert bij de <a href="https://github.com/microsoft/api-guidelines/blob/vNext/azure/Guidelines.md#filter-operators" target="_blank">Microsoft Azure REST API Guidelines</a><sup>[1]</sup>. Om dit te ondersteunen heb ik een interpreter gemaakt die de filtertekst omzet naar een Abstract Syntax Tree (AST), het resultaat van de AST wordt vervolgens gebruikt om een Linq expressie te maken via Expression Trees. Voordat ik hieraan begon was ik onbekend met interpreters, maar met behulp van een blog met voorbeelden in VbScript waarbij een rekenmachine werd gemaakt heb ik in C# een interpreter kunnen maken voor de filter.
            </p>
            <p>
                Een project dat ik samen met een collega heb gestart en ondertussen breder wordt gedragen is een management portal. Onze eerdere management portal was gemaakt door een externe ontwikkelaar en werd gebruikt om de autorisatie in te richten. De management portal had af en toe wat problemen die helaas te veel tijd kostten om op te lossen aangezien de applicatie op een afwijkende manier was opgezet. Mijn collega en ik hebben daarom een grote aanzet gemaakt om aan te tonen dat de management portal op een soortgelijke manier kan worden opgezet zoals al onze andere applicaties. Wij hebben er voor gekozen om er een micro-service backend voor te maken samen met een front-end gemaakt in Blazor.
                Ondertussen wordt onze variant van de management portal gebruikt en is deze qua inhoud zelfs uitgebreid met functionaliteit die niet te maken heeft met het inrichten van autorisaties.
            </p>
            <p>
                Om tot een stabiele en robuuste applicatie te komen is het belangrijk om de applicaties in de gaten te houden terwijl deze op productie draaien. Het is daarom interessant om de logging in te zien van fouten die optreden op productie. Met deze gedachten heb ik een tool gemaakt (voordat we Application Insights gebruikten) die de logging via SEQ opvraagt en groepeert. Hiermee konden we een overzicht genereren die aangaf welke fout het meeste voorkomt en hier aandacht aan besteed om op te lossen. Met deze pro-actieve instelling hebben we meerdere bugs opgelost, soms voordat klanten erover klaagden, andere keren voordat de klacht bij ons was aangekomen.
                Een vervolgproject dat helaas nog niet verder is opgepakt is de Application Insights variant. Application Insights biedt standaard al overzichten van de meest voorkomende fouten per tijdsperiode, maar wij hadden nog geen mogelijkheid gezien om een historie aan te kunnen maken met het idee om de overzichten van eerder periodes te vergelijken en om (JIRA) issues, of opmerkingen te kunnen koppelen aan de logmeldingen.
            </p>
            <p>
                Het meest recente project waar ik aan heb gewerkt is het opzetten van een AI assistent. Deze chatassistent kan met behulp van Semantic Kernel endpoints van onze API's aanroepen. We hebben ervoor gekozen om de mogelijkheden die de assistent heeft te beperken op basis van de rechten die de gebruiker heeft. Het aanroepen van eigen code (of endpoints) gaat via Plugins die geregistreerd moeten zijn bij de kernel. De eigen code die je aanroept worden Native Functions genoemd en deze functies kunnen via een attribuut een beschrijving krijgen van de methode en de argumenten en return waardes. Al deze beschrijvingen worden naar de LLM gestuurd zodat de LLM weet of het een native function moet aanroepen. Hoe meer native functions er zijn, des te meer de LLM moet overwegen om wel of niet aan te roepen. Daarom de keuze om plugins klein te houden en alleen te registreren indien nodig.
                Mijn verwachting is dat in de toekomst de assistent opgesplitst zal worden in meerdere assistenten met iedere een eigen duidelijke rol, maar tot die tijd registreren wij de plugins op basis van autorisatie.
            </p>
            <h3>Vrije tijd</h3>
            <p>
                In mijn vrije tijd heb ik twee kleine spellen gemaakt met Unity en deze beschikbaar gemaakt in de Google Playstore. Ondertussen is mijn developer account verlopen en zijn de spellen niet meer beschikbaar om te downloaden, maar ze staan nog wel op mijn smartphone.
                Bij het eerste spel bewoog je automatisch over een pad en moet je ballonen zien te raken. De besturing van dit spel verloopt geheel via de gyroscope van je smart device, als je naar links wilt kijken zul je zelf ook naar links moeten draaien.
                Gameplay beelden zijn te zien in <a href="https://www.youtube.com/watch?v=MWa4WFF4ca4&ab_channel=YuriParijs" target="_blank">deze video</a><sup>[2]</sup>.
            </p>
            <p>
                Daarnaast heb ik een ander spel gemaakt dat nooit beschikbaar is gemaakt in de Google Playstore. Het gaat om een puzzelspel gebaseerd op Yahtzee dat gebruik maakt van Azure PlayFab en Photon engine om online multiplayer en matchmaking mogelijk te maken.
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <h2>Links</h2>
            <ul>
                <li>[1] Microsoft Azure REST API Guidelines: <a href="https://github.com/microsoft/api-guidelines/blob/vNext/azure/Guidelines.md#filter-operators" target="_blank">https://github.com/microsoft/api-guidelines/blob/vNext/azure/Guidelines.md#filter-operators</a></li>
                <li>[2] Gameplay beelden zelf gemaakt spel: <a href="https://www.youtube.com/watch?v=MWa4WFF4ca4&ab_channel=YuriParijs" target="_blank">https://www.youtube.com/watch?v=MWa4WFF4ca4&ab_channel=YuriParijs</a></li>
            </ul>
        </div>
    </div>    
    <div class="row">
        <div class="col">
            <h4>QR code naar portfolio</h4>
            <img src="cv/qr_link.png" class="rounded" width="300" />
        </div>
    </div>
</div>

@code {
    private RenderFragment<string> RenderSkill = x => @<li>@x</li>;
}